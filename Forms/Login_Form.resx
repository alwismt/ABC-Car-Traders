<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>